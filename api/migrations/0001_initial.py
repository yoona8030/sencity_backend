# Generated by Django 5.2.5 on 2025-08-26 11:49

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Animal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_kor', models.CharField(max_length=50)),
                ('name_eng', models.CharField(max_length=50)),
                ('image_url', models.URLField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('features', models.JSONField(blank=True, default=list)),
                ('precautions', models.JSONField(blank=True, default=list)),
            ],
            options={
                'verbose_name': 'Animal',
                'verbose_name_plural': 'Animal',
            },
        ),
        migrations.CreateModel(
            name='Statistic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_unit', models.CharField(choices=[('year', 'year'), ('month', 'month')], max_length=10)),
                ('state_year', models.IntegerField()),
                ('state_month', models.IntegerField(default=0)),
                ('all_reports', models.IntegerField(default=0)),
                ('completed', models.IntegerField(default=0)),
                ('incomplete', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Statistic',
                'verbose_name_plural': 'Statistic',
                'ordering': ['-state_year', '-state_month'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('telphone', models.CharField(blank=True, max_length=20)),
                ('user_address', models.CharField(blank=True, max_length=255)),
                ('agree', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Users',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=128)),
                ('display_name', models.CharField(blank=True, max_length=64)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='admin', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.DecimalField(db_index=True, decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(db_index=True, decimal_places=6, max_digits=9)),
                ('city', models.CharField(blank=True, max_length=50)),
                ('district', models.CharField(blank=True, max_length=50)),
                ('region', models.CharField(blank=True, db_index=True, default='', max_length=100)),
                ('address', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'ordering': ['-id'],
                'indexes': [models.Index(fields=['city', 'district'], name='api_locatio_city_40d0b7_idx'), models.Index(fields=['latitude', 'longitude'], name='api_locatio_latitud_670fa5_idx')],
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_date', models.DateTimeField(db_index=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='reports/')),
                ('status', models.CharField(choices=[('checking', '접수 완료'), ('on_hold', '보류'), ('completed', '답변 완료')], default='checking', max_length=20)),
                ('animal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='api.animal')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='api.location')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-report_date'],
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('feedback_id', models.AutoField(primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('feedback_datetime', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('admin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='admin_feedbacks', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_feedbacks', to=settings.AUTH_USER_MODEL)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='api.report')),
            ],
            options={
                'ordering': ['-feedback_datetime'],
            },
        ),
        migrations.CreateModel(
            name='SavedPlace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_places', to='api.location')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_places', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SearchHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(max_length=100)),
                ('searched_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='search_histories', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'SearchHistory',
                'verbose_name_plural': 'SearchHistory',
                'ordering': ['-searched_at'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('group', '그룹 알림'), ('single', '개별 알림')], db_index=True, max_length=10)),
                ('reply', models.TextField(blank=True, null=True)),
                ('status_change', models.CharField(blank=True, choices=[('checking->on_hold', '접수 완료 → 보류'), ('checking->completed', '접수 완료 → 답변 완료'), ('on_hold->completed', '보류 → 답변 완료')], db_index=True, max_length=20, null=True)),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('admin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='api.admin')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'type', 'created_at'], name='api_notific_user_id_174eb4_idx')],
                'constraints': [models.CheckConstraint(condition=models.Q(models.Q(('type', 'group'), ('user__isnull', True)), models.Q(('type', 'individual'), ('user__isnull', False)), _connector='OR'), name='notif_user_null_only_for_group')],
            },
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['report_date'], name='api_report_report__650dc3_idx'),
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['status', 'report_date'], name='api_report_status_8ffab2_idx'),
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['animal', 'report_date'], name='api_report_animal__22b3de_idx'),
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['user', 'report_date'], name='api_report_user_id_ff8308_idx'),
        ),
        migrations.AddIndex(
            model_name='feedback',
            index=models.Index(fields=['report', 'user', 'feedback_datetime'], name='api_feedbac_report__07495d_idx'),
        ),
        migrations.AddIndex(
            model_name='savedplace',
            index=models.Index(fields=['user', 'created_at'], name='api_savedpl_user_id_c7f773_idx'),
        ),
    ]
