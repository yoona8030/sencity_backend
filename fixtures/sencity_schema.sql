CREATE TABLE IF NOT EXISTS "django_migrations" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" datetime NOT NULL);
CREATE TABLE sqlite_sequence(name,seq);
CREATE TABLE IF NOT EXISTS "django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL);
CREATE TABLE IF NOT EXISTS "auth_group_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED, "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE TABLE IF NOT EXISTS "auth_permission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "codename" varchar(100) NOT NULL, "name" varchar(255) NOT NULL);
CREATE TABLE IF NOT EXISTS "auth_group" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(150) NOT NULL UNIQUE);
CREATE TABLE IF NOT EXISTS "api_user_groups" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" bigint NOT NULL REFERENCES "api_user" ("id") DEFERRABLE INITIALLY DEFERRED, "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE TABLE IF NOT EXISTS "api_user_user_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" bigint NOT NULL REFERENCES "api_user" ("id") DEFERRABLE INITIALLY DEFERRED, "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE TABLE IF NOT EXISTS "django_admin_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint unsigned NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "user_id" bigint NOT NULL REFERENCES "api_user" ("id") DEFERRABLE INITIALLY DEFERRED, "action_time" datetime NOT NULL);
CREATE TABLE IF NOT EXISTS "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" datetime NOT NULL);
CREATE TABLE IF NOT EXISTS "api_searchhistory" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "keyword" varchar(100) NOT NULL, "user_id" bigint NOT NULL REFERENCES "api_user" ("id") DEFERRABLE INITIALLY DEFERRED, "searched_at" datetime NOT NULL);
CREATE TABLE IF NOT EXISTS "api_animal" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name_kor" varchar(50) NOT NULL, "name_eng" varchar(50) NOT NULL, "image_url" varchar(200) NOT NULL, "description" text NOT NULL, "features" text NOT NULL CHECK ((JSON_VALID("features") OR "features" IS NULL)), "precautions" text NOT NULL CHECK ((JSON_VALID("precautions") OR "precautions" IS NULL)));
CREATE TABLE IF NOT EXISTS "api_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "is_superuser" bool NOT NULL, "username" varchar(150) NOT NULL UNIQUE, "first_name" varchar(150) NOT NULL, "last_name" varchar(150) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "telphone" varchar(20) NOT NULL, "user_address" varchar(255) NOT NULL, "agree" bool NOT NULL, "email" varchar(254) NOT NULL UNIQUE);
CREATE TABLE IF NOT EXISTS "dashboard_cctvdevice" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL, "status" varchar(10) NOT NULL, "last_heartbeat" datetime NOT NULL);
CREATE TABLE IF NOT EXISTS "dashboard_motionsensor" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "status" varchar(10) NOT NULL, "detected_at" datetime NOT NULL, "device_id" bigint NOT NULL REFERENCES "dashboard_cctvdevice" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE TABLE IF NOT EXISTS "dashboard_report" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "report_date" datetime NOT NULL, "animal_name" varchar(50) NOT NULL, "status" varchar(20) NOT NULL, "report_region" varchar(255) NOT NULL, "latitude" real NOT NULL, "longitude" real NOT NULL, "user_id" bigint NOT NULL REFERENCES "api_user" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE TABLE IF NOT EXISTS "api_statistic" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "state_unit" varchar(10) NOT NULL, "state_year" integer NOT NULL, "state_month" integer NOT NULL, "all_reports" integer NOT NULL, "completed" integer NOT NULL, "incomplete" integer NOT NULL);
CREATE TABLE IF NOT EXISTS "api_feedback" ("content" text NOT NULL, "user_id" bigint NOT NULL REFERENCES "api_user" ("id") DEFERRABLE INITIALLY DEFERRED, "report_id" bigint NOT NULL REFERENCES "api_report" ("id") DEFERRABLE INITIALLY DEFERRED, "admin_id" bigint NULL REFERENCES "api_user" ("id") DEFERRABLE INITIALLY DEFERRED, "feedback_id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "feedback_datetime" datetime NOT NULL);
CREATE TABLE IF NOT EXISTS "api_report" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "report_date" datetime NOT NULL, "image" varchar(100) NULL, "animal_id" bigint NOT NULL REFERENCES "api_animal" ("id") DEFERRABLE INITIALLY DEFERRED, "user_id" bigint NOT NULL REFERENCES "api_user" ("id") DEFERRABLE INITIALLY DEFERRED, "status" varchar(20) NOT NULL, "location_id" bigint NULL REFERENCES "api_location" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE TABLE IF NOT EXISTS "api_location" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "latitude" decimal NOT NULL, "longitude" decimal NOT NULL, "region" varchar(100) NOT NULL, "address" varchar(255) NOT NULL, "city" varchar(50) NOT NULL, "district" varchar(50) NOT NULL);
CREATE TABLE IF NOT EXISTS "dashboard_prediction" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "image" varchar(100) NULL, "filename" varchar(255) NOT NULL, "label" varchar(200) NOT NULL, "score" real NOT NULL, "source" varchar(50) NOT NULL, "created_at" datetime NOT NULL, "device_id" bigint NULL REFERENCES "dashboard_cctvdevice" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE TABLE IF NOT EXISTS "api_admin" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "email" varchar(254) NOT NULL UNIQUE, "name" varchar(100) NOT NULL, "password" varchar(128) NOT NULL, "created_at" datetime NOT NULL, "display_name" varchar(64) NOT NULL, "user_id" bigint NULL UNIQUE REFERENCES "api_user" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE TABLE IF NOT EXISTS "api_profile" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "address" varchar(255) NOT NULL, "phone" varchar(20) NOT NULL, "consent_terms" bool NOT NULL, "consent_location" bool NOT NULL, "consent_marketing" bool NOT NULL, "user_id" bigint NOT NULL UNIQUE REFERENCES "api_user" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE TABLE IF NOT EXISTS "api_savedplace" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL, "created_at" datetime NOT NULL, "location_id" bigint NOT NULL REFERENCES "api_location" ("id") DEFERRABLE INITIALLY DEFERRED, "user_id" bigint NOT NULL REFERENCES "api_user" ("id") DEFERRABLE INITIALLY DEFERRED, "client_id" varchar(100) NULL, "latitude" real NULL, "longitude" real NULL, CONSTRAINT "uniq_user_client_id" UNIQUE ("user_id", "client_id"));
CREATE TABLE reports_staging(report_date TEXT, animal_kw TEXT, status TEXT, city TEXT, place TEXT, user_id INTEGER, lat REAL, lon REAL);
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE UNIQUE INDEX "api_user_groups_user_id_group_id_9c7ddfb5_uniq" ON "api_user_groups" ("user_id", "group_id");
CREATE INDEX "api_user_groups_user_id_a5ff39fa" ON "api_user_groups" ("user_id");
CREATE INDEX "api_user_groups_group_id_3af85785" ON "api_user_groups" ("group_id");
CREATE UNIQUE INDEX "api_user_user_permissions_user_id_permission_id_a06dd704_uniq" ON "api_user_user_permissions" ("user_id", "permission_id");
CREATE INDEX "api_user_user_permissions_user_id_f3945d65" ON "api_user_user_permissions" ("user_id");
CREATE INDEX "api_user_user_permissions_permission_id_305b7fea" ON "api_user_user_permissions" ("permission_id");
CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX "api_searchhistory_user_id_e2513d4c" ON "api_searchhistory" ("user_id");
CREATE INDEX "dashboard_motionsensor_device_id_63e1b5c1" ON "dashboard_motionsensor" ("device_id");
CREATE INDEX "dashboard_report_user_id_ac88ca29" ON "dashboard_report" ("user_id");
CREATE INDEX "api_feedback_user_id_af9adbfc" ON "api_feedback" ("user_id");
CREATE INDEX "api_feedback_report_id_0ccc95fb" ON "api_feedback" ("report_id");
CREATE INDEX "api_feedback_admin_id_2dfd0fe0" ON "api_feedback" ("admin_id");
CREATE INDEX "api_feedback_feedback_datetime_14a45a87" ON "api_feedback" ("feedback_datetime");
CREATE INDEX "api_feedbac_report__07495d_idx" ON "api_feedback" ("report_id", "user_id", "feedback_datetime");
CREATE INDEX "api_report_report_date_36e9b17a" ON "api_report" ("report_date");
CREATE INDEX "api_report_animal_id_314c06fe" ON "api_report" ("animal_id");
CREATE INDEX "api_report_user_id_c5774f32" ON "api_report" ("user_id");
CREATE INDEX "api_report_report__650dc3_idx" ON "api_report" ("report_date");
CREATE INDEX "api_report_status_8ffab2_idx" ON "api_report" ("status", "report_date");
CREATE INDEX "api_report_animal__22b3de_idx" ON "api_report" ("animal_id", "report_date");
CREATE INDEX "api_report_user_id_ff8308_idx" ON "api_report" ("user_id", "report_date");
CREATE INDEX "api_location_latitude_a03f8f21" ON "api_location" ("latitude");
CREATE INDEX "api_location_longitude_1b81a930" ON "api_location" ("longitude");
CREATE INDEX "api_location_region_c217a055" ON "api_location" ("region");
CREATE INDEX "api_locatio_city_40d0b7_idx" ON "api_location" ("city", "district");
CREATE INDEX "api_locatio_latitud_670fa5_idx" ON "api_location" ("latitude", "longitude");
CREATE INDEX "api_report_location_id_e3a9542a" ON "api_report" ("location_id");
CREATE INDEX "dashboard_prediction_device_id_6a909889" ON "dashboard_prediction" ("device_id");
CREATE INDEX "dashboard_p_created_ad84b6_idx" ON "dashboard_prediction" ("created_at");
CREATE INDEX "dashboard_p_label_d5f567_idx" ON "dashboard_prediction" ("label");
CREATE INDEX "api_savedplace_location_id_6a485ce1" ON "api_savedplace" ("location_id");
CREATE INDEX "api_savedplace_user_id_dc4bf34d" ON "api_savedplace" ("user_id");
CREATE INDEX "api_savedplace_client_id_b815a825" ON "api_savedplace" ("client_id");
CREATE UNIQUE INDEX ux_api_location_key ON api_location(region, address, latitude, longitude);
CREATE VIEW vw_report_full AS SELECT r.id AS report_id, date(r.report_date) AS report_date, a.name_kor AS animal, r.status, r.user_id, l.region, l.address AS place, l.latitude, l.longitude FROM api_report r JOIN api_animal a ON a.id=r.animal_id LEFT JOIN api_location l ON l.id=r.location_id
/* vw_report_full(report_id,report_date,animal,status,user_id,region,place,latitude,longitude) */;
CREATE TABLE sqlite_stat1(tbl,idx,stat);
CREATE TABLE IF NOT EXISTS "api_notification" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "type" varchar(10) NOT NULL, "reply" text NULL, "status_change" varchar(24) NULL, "created_at" datetime NOT NULL, "admin_id" bigint NULL REFERENCES "api_admin" ("id") DEFERRABLE INITIALLY DEFERRED, "user_id" bigint NULL REFERENCES "api_user" ("id") DEFERRABLE INITIALLY DEFERRED, CONSTRAINT "notif_individual_requires_user" CHECK ((("type" = 'individual' AND "user_id" IS NOT NULL) OR NOT ("type" = 'individual'))), CONSTRAINT "notif_group_requires_no_user" CHECK ((("type" = 'group' AND "user_id" IS NULL) OR NOT ("type" = 'group'))));
CREATE INDEX "api_notification_type_a4a72846" ON "api_notification" ("type");
CREATE INDEX "api_notification_status_change_693650ad" ON "api_notification" ("status_change");
CREATE INDEX "api_notification_created_at_3cfcb1a6" ON "api_notification" ("created_at");
CREATE INDEX "api_notification_admin_id_ed98f3d4" ON "api_notification" ("admin_id");
CREATE INDEX "api_notification_user_id_6cede59e" ON "api_notification" ("user_id");
CREATE INDEX "api_notific_user_id_174eb4_idx" ON "api_notification" ("user_id", "type", "created_at");
